{"version":3,"sources":["images/otrish-logo.png","utils/constants.ts","utils/deliveryCost.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","DELIVERY_COST_SCHEDULES","a","maxKg","cost","b","c","d","e","f","SCHEDULE_BY_POSTCODE_PREFIX","getDeliveryCost","totalWeightKg","postCode","shouldDeliver","schedule","schedules","postCodeScheduleMap","prefixLength","length","relevantScheduleKey","substr","sort","getDeliveryCostScheduleForPostCode","weightKg","i","getDeliveryCostForWeightAndSchedule","QUALITIES","label","priceCents","unit","getWeight","diameterMm","thicknessMm","lengthMm","getOrderItemWeight","orderItem","units","getOrderItemCost","itemWeight","console","log","quality","isValidFormState","formState","undefined","FormItemSummary","item","totalLengthMeters","totalWeight","totalPrice","className","toFixed","OrderItemDisplay","TotalPriceDisplay","orderItems","map","reduce","acc","weight","totalMaterialCost","totalDeliveryCost","totalCost","App","useState","setFormState","setShouldDeliver","setPostCode","setOrderItems","qualityOptions","price","value","Container","fluid","Row","Col","src","otrishLogo","alt","height","Form","Group","as","controlId","Label","column","sm","options","onChange","event","InputGroup","Control","type","step","Number","target","Append","Text","id","Check","defaultChecked","maxLength","Button","variant","block","disabled","onClick","preventDefault","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72bbe368.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/otrish-logo.14c5b1bd.png\";","import { DeliveryCost } from \"./deliveryCost\";\n\nconst DELIVERY_COST_SCHEDULE_A = [\n  { maxKg: 350, cost: 56 },\n  { maxKg: 700, cost: 76 },\n  { maxKg: 1050, cost: 100 },\n  { maxKg: 1400, cost: 126 },\n  { maxKg: 1750, cost: 143 },\n  { maxKg: 2100, cost: 162 },\n  { maxKg: 2450, cost: 166 },\n  { maxKg: 2800, cost: 169 },\n  { maxKg: 3500, cost: 173 },\n  { maxKg: 3850, cost: 176 },\n  { maxKg: 4200, cost: 180 },\n  { maxKg: 4550, cost: 182 },\n  { maxKg: 4900, cost: 184 },\n  { maxKg: 5250, cost: 187 },\n  { maxKg: 5600, cost: 189 },\n  { maxKg: 5950, cost: 192 },\n  { maxKg: 6300, cost: 194 },\n  { maxKg: 6750, cost: 198 },\n  { maxKg: 7000, cost: 203 },\n  { maxKg: 7350, cost: 205 },\n  { maxKg: 7700, cost: 208 },\n  { maxKg: 8050, cost: 209 },\n  { maxKg: 8400, cost: 211 },\n  { maxKg: 8750, cost: 212 },\n  { maxKg: 9100, cost: 215 },\n  { maxKg: 9550, cost: 216 },\n  { maxKg: 9800, cost: 219 },\n  { maxKg: 10150, cost: 221 },\n  { maxKg: 10500, cost: 222 },\n  { maxKg: 10850, cost: 223 },\n  { maxKg: 11200, cost: 224 },\n  { maxKg: 11550, cost: 224 },\n  { maxKg: 11900, cost: 226 },\n  { maxKg: 12250, cost: 231 },\n  { maxKg: 12600, cost: 235 },\n  { maxKg: 13300, cost: 249 },\n  { maxKg: 14000, cost: 258 },\n  { maxKg: 14700, cost: 269 },\n  { maxKg: 15400, cost: 280 },\n  { maxKg: 16100, cost: 290 },\n  { maxKg: 16700, cost: 298 },\n  { maxKg: 17500, cost: 308 },\n  { maxKg: 18200, cost: 318 },\n  { maxKg: 18900, cost: 327 },\n  { maxKg: 19600, cost: 338 },\n  { maxKg: 23800, cost: 362 },\n];\n\nconst DELIVERY_COST_SCHEDULE_B = [\n  { maxKg: 350, cost: 58 },\n  { maxKg: 700, cost: 85 },\n  { maxKg: 1050, cost: 110 },\n  { maxKg: 1400, cost: 140 },\n  { maxKg: 1750, cost: 162 },\n  { maxKg: 2100, cost: 183 },\n  { maxKg: 2450, cost: 188 },\n  { maxKg: 2800, cost: 193 },\n  { maxKg: 3500, cost: 193 },\n  { maxKg: 3850, cost: 211 },\n  { maxKg: 4200, cost: 216 },\n  { maxKg: 4550, cost: 222 },\n  { maxKg: 4900, cost: 227 },\n  { maxKg: 5250, cost: 232 },\n  { maxKg: 5600, cost: 239 },\n  { maxKg: 5950, cost: 244 },\n  { maxKg: 6300, cost: 250 },\n  { maxKg: 6750, cost: 254 },\n  { maxKg: 7000, cost: 260 },\n  { maxKg: 7350, cost: 265 },\n  { maxKg: 7700, cost: 270 },\n  { maxKg: 8050, cost: 276 },\n  { maxKg: 8400, cost: 281 },\n  { maxKg: 8750, cost: 287 },\n  { maxKg: 9100, cost: 292 },\n  { maxKg: 9550, cost: 297 },\n  { maxKg: 9800, cost: 302 },\n  { maxKg: 10150, cost: 308 },\n  { maxKg: 10500, cost: 313 },\n  { maxKg: 10850, cost: 318 },\n  { maxKg: 11200, cost: 322 },\n  { maxKg: 11550, cost: 324 },\n  { maxKg: 11900, cost: 327 },\n  { maxKg: 12250, cost: 335 },\n  { maxKg: 12600, cost: 343 },\n  { maxKg: 13300, cost: 358 },\n  { maxKg: 14000, cost: 373 },\n  { maxKg: 14700, cost: 389 },\n  { maxKg: 15400, cost: 403 },\n  { maxKg: 16100, cost: 417 },\n  { maxKg: 16700, cost: 432 },\n  { maxKg: 17500, cost: 447 },\n  { maxKg: 18200, cost: 463 },\n  { maxKg: 18900, cost: 478 },\n  { maxKg: 19600, cost: 494 },\n  { maxKg: 23800, cost: 519 },\n];\n\nconst DELIVERY_COST_SCHEDULE_C = [\n  { maxKg: 350, cost: 60 },\n  { maxKg: 700, cost: 89 },\n  { maxKg: 1050, cost: 122 },\n  { maxKg: 1400, cost: 182 },\n  { maxKg: 1750, cost: 180 },\n  { maxKg: 2100, cost: 205 },\n  { maxKg: 2450, cost: 210 },\n  { maxKg: 2800, cost: 216 },\n  { maxKg: 3500, cost: 229 },\n  { maxKg: 3850, cost: 234 },\n  { maxKg: 4200, cost: 242 },\n  { maxKg: 4550, cost: 246 },\n  { maxKg: 4900, cost: 253 },\n  { maxKg: 5250, cost: 258 },\n  { maxKg: 5600, cost: 265 },\n  { maxKg: 5950, cost: 272 },\n  { maxKg: 6300, cost: 277 },\n  { maxKg: 6750, cost: 285 },\n  { maxKg: 7000, cost: 290 },\n  { maxKg: 7350, cost: 296 },\n  { maxKg: 7700, cost: 301 },\n  { maxKg: 8050, cost: 308 },\n  { maxKg: 8400, cost: 314 },\n  { maxKg: 8750, cost: 321 },\n  { maxKg: 9100, cost: 326 },\n  { maxKg: 9550, cost: 333 },\n  { maxKg: 9800, cost: 338 },\n  { maxKg: 10150, cost: 347 },\n  { maxKg: 10500, cost: 355 },\n  { maxKg: 10850, cost: 360 },\n  { maxKg: 11200, cost: 369 },\n  { maxKg: 11550, cost: 376 },\n  { maxKg: 11900, cost: 383 },\n  { maxKg: 12250, cost: 391 },\n  { maxKg: 12600, cost: 400 },\n  { maxKg: 13300, cost: 417 },\n  { maxKg: 14000, cost: 437 },\n  { maxKg: 14700, cost: 452 },\n  { maxKg: 15400, cost: 471 },\n  { maxKg: 16100, cost: 488 },\n  { maxKg: 16700, cost: 507 },\n  { maxKg: 17500, cost: 523 },\n  { maxKg: 18200, cost: 542 },\n  { maxKg: 18900, cost: 559 },\n  { maxKg: 19600, cost: 576 },\n  { maxKg: 23800, cost: 608 },\n];\n\nconst DELIVERY_COST_SCHEDULE_D = [\n  { maxKg: 350, cost: 64 },\n  { maxKg: 700, cost: 97 },\n  { maxKg: 1050, cost: 133 },\n  { maxKg: 1400, cost: 170 },\n  { maxKg: 1750, cost: 197 },\n  { maxKg: 2100, cost: 224 },\n  { maxKg: 2450, cost: 233 },\n  { maxKg: 2800, cost: 244 },\n  { maxKg: 3500, cost: 263 },\n  { maxKg: 3850, cost: 273 },\n  { maxKg: 4200, cost: 281 },\n  { maxKg: 4550, cost: 291 },\n  { maxKg: 4900, cost: 300 },\n  { maxKg: 5250, cost: 311 },\n  { maxKg: 5600, cost: 319 },\n  { maxKg: 5950, cost: 330 },\n  { maxKg: 6300, cost: 338 },\n  { maxKg: 6750, cost: 348 },\n  { maxKg: 7000, cost: 358 },\n  { maxKg: 7350, cost: 368 },\n  { maxKg: 7700, cost: 377 },\n  { maxKg: 8050, cost: 385 },\n  { maxKg: 8400, cost: 396 },\n  { maxKg: 8750, cost: 404 },\n  { maxKg: 9100, cost: 412 },\n  { maxKg: 9550, cost: 424 },\n  { maxKg: 9800, cost: 436 },\n  { maxKg: 10150, cost: 447 },\n  { maxKg: 10500, cost: 458 },\n  { maxKg: 10850, cost: 471 },\n  { maxKg: 11200, cost: 486 },\n  { maxKg: 11550, cost: 492 },\n  { maxKg: 11900, cost: 499 },\n  { maxKg: 12250, cost: 508 },\n  { maxKg: 12600, cost: 519 },\n  { maxKg: 13300, cost: 540 },\n  { maxKg: 14000, cost: 559 },\n  { maxKg: 14700, cost: 580 },\n  { maxKg: 15400, cost: 602 },\n  { maxKg: 16100, cost: 622 },\n  { maxKg: 16700, cost: 643 },\n  { maxKg: 17500, cost: 662 },\n  { maxKg: 18200, cost: 683 },\n  { maxKg: 18900, cost: 702 },\n  { maxKg: 19600, cost: 725 },\n  { maxKg: 23800, cost: 764 },\n];\n\nconst DELIVERY_COST_SCHEDULE_E = [\n  { maxKg: 350, cost: 68 },\n  { maxKg: 700, cost: 103 },\n  { maxKg: 1050, cost: 142 },\n  { maxKg: 1400, cost: 181 },\n  { maxKg: 1750, cost: 209 },\n  { maxKg: 2100, cost: 237 },\n  { maxKg: 2450, cost: 249 },\n  { maxKg: 2800, cost: 257 },\n  { maxKg: 3500, cost: 277 },\n  { maxKg: 3850, cost: 289 },\n  { maxKg: 4200, cost: 298 },\n  { maxKg: 4550, cost: 309 },\n  { maxKg: 4900, cost: 318 },\n  { maxKg: 5250, cost: 328 },\n  { maxKg: 5600, cost: 339 },\n  { maxKg: 5950, cost: 349 },\n  { maxKg: 6300, cost: 358 },\n  { maxKg: 6750, cost: 369 },\n  { maxKg: 7000, cost: 380 },\n  { maxKg: 7350, cost: 390 },\n  { maxKg: 7700, cost: 399 },\n  { maxKg: 8050, cost: 408 },\n  { maxKg: 8400, cost: 420 },\n  { maxKg: 8750, cost: 428 },\n  { maxKg: 9100, cost: 437 },\n  { maxKg: 9550, cost: 448 },\n  { maxKg: 9800, cost: 462 },\n  { maxKg: 10150, cost: 473 },\n  { maxKg: 10500, cost: 484 },\n  { maxKg: 10850, cost: 499 },\n  { maxKg: 11200, cost: 515 },\n  { maxKg: 11550, cost: 521 },\n  { maxKg: 11900, cost: 528 },\n  { maxKg: 12250, cost: 539 },\n  { maxKg: 12600, cost: 549 },\n  { maxKg: 13300, cost: 570 },\n  { maxKg: 14000, cost: 592 },\n  { maxKg: 14700, cost: 614 },\n  { maxKg: 15400, cost: 636 },\n  { maxKg: 16100, cost: 658 },\n  { maxKg: 16700, cost: 679 },\n  { maxKg: 17500, cost: 701 },\n  { maxKg: 18200, cost: 722 },\n  { maxKg: 18900, cost: 743 },\n  { maxKg: 19600, cost: 765 },\n  { maxKg: 23800, cost: 807 },\n];\n\nconst DELIVERY_COST_SCHEDULE_F = [\n  { maxKg: 350, cost: 68 },\n  { maxKg: 700, cost: 125 },\n  { maxKg: 1050, cost: 166 },\n  { maxKg: 1400, cost: 209 },\n  { maxKg: 1750, cost: 243 },\n  { maxKg: 2100, cost: 277 },\n  { maxKg: 2450, cost: 290 },\n  { maxKg: 2800, cost: 300 },\n  { maxKg: 3500, cost: 323 },\n  { maxKg: 3850, cost: 336 },\n  { maxKg: 4200, cost: 348 },\n  { maxKg: 4550, cost: 358 },\n  { maxKg: 4900, cost: 370 },\n  { maxKg: 5250, cost: 382 },\n  { maxKg: 5600, cost: 394 },\n  { maxKg: 5950, cost: 405 },\n  { maxKg: 6300, cost: 416 },\n  { maxKg: 6750, cost: 427 },\n  { maxKg: 7000, cost: 439 },\n  { maxKg: 7350, cost: 450 },\n  { maxKg: 7700, cost: 463 },\n  { maxKg: 8050, cost: 474 },\n  { maxKg: 8400, cost: 486 },\n  { maxKg: 8750, cost: 498 },\n  { maxKg: 9100, cost: 509 },\n  { maxKg: 9550, cost: 521 },\n  { maxKg: 9800, cost: 532 },\n  { maxKg: 10150, cost: 544 },\n  { maxKg: 10500, cost: 554 },\n  { maxKg: 10850, cost: 566 },\n  { maxKg: 11200, cost: 576 },\n  { maxKg: 11550, cost: 589 },\n  { maxKg: 11900, cost: 602 },\n  { maxKg: 12250, cost: 613 },\n  { maxKg: 12600, cost: 625 },\n  { maxKg: 13300, cost: 650 },\n  { maxKg: 14000, cost: 674 },\n  { maxKg: 14700, cost: 697 },\n  { maxKg: 15400, cost: 725 },\n  { maxKg: 16100, cost: 735 },\n  { maxKg: 16700, cost: 759 },\n  { maxKg: 17500, cost: 770 },\n  { maxKg: 18200, cost: 807 },\n  { maxKg: 18900, cost: 832 },\n  { maxKg: 19600, cost: 864 },\n  { maxKg: 23800, cost: 940 },\n];\n\nexport const DELIVERY_COST_SCHEDULES: {\n  [key: string]: Array<DeliveryCost>;\n} = {\n  a: DELIVERY_COST_SCHEDULE_A,\n  b: DELIVERY_COST_SCHEDULE_B,\n  c: DELIVERY_COST_SCHEDULE_C,\n  d: DELIVERY_COST_SCHEDULE_D,\n  e: DELIVERY_COST_SCHEDULE_E,\n  f: DELIVERY_COST_SCHEDULE_F,\n};\n\nexport const SCHEDULE_BY_POSTCODE_PREFIX: {\n  [key: string]: string;\n} = {\n  \"40\": \"a\",\n  \"46\": \"a\",\n  \"47\": \"a\",\n  \"48\": \"a\",\n  \"49\": \"a\",\n  \"50\": \"a\",\n  \"51\": \"a\",\n  \"52\": \"a\",\n  \"53\": \"a\",\n  \"31\": \"b\",\n  \"32\": \"b\",\n  \"33\": \"b\",\n  \"38\": \"b\",\n  \"39\": \"b\",\n  \"41\": \"b\",\n  \"42\": \"b\",\n  \"43\": \"b\",\n  \"44\": \"b\",\n  \"45\": \"b\",\n  \"54\": \"b\",\n  \"55\": \"b\",\n  \"56\": \"b\",\n  \"57\": \"b\",\n  \"89\": \"b\",\n  \"10\": \"c\",\n  \"11\": \"c\",\n  \"12\": \"c\",\n  \"13\": \"c\",\n  \"14\": \"c\",\n  \"15\": \"c\",\n  \"20\": \"c\",\n  \"21\": \"c\",\n  \"22\": \"c\",\n  \"23\": \"c\",\n  \"24\": \"c\",\n  \"25\": \"c\",\n  \"26\": \"c\",\n  \"27\": \"c\",\n  \"28\": \"c\",\n  \"30\": \"c\",\n  \"34\": \"c\",\n  \"35\": \"c\",\n  \"36\": \"c\",\n  \"37\": \"c\",\n  \"80\": \"c\",\n  \"81\": \"c\",\n  \"82\": \"c\",\n  \"83\": \"c\",\n  \"84\": \"c\",\n  \"85\": \"c\",\n  \"86\": \"c\",\n  \"87\": \"c\",\n  \"88\": \"c\",\n  \"90\": \"c\",\n  \"91\": \"c\",\n  \"92\": \"c\",\n  \"93\": \"c\",\n  \"94\": \"c\",\n  \"95\": \"c\",\n  \"98\": \"c\",\n  \"70\": \"d\",\n  \"71\": \"d\",\n  \"72\": \"d\",\n  \"73\": \"d\",\n  \"74\": \"d\",\n  \"75\": \"d\",\n  \"96\": \"d\",\n  \"97\": \"d\",\n  \"99\": \"d\",\n  \"60\": \"e\",\n  \"61\": \"e\",\n  \"62\": \"e\",\n  \"63\": \"e\",\n  \"64\": \"e\",\n  \"65\": \"e\",\n  \"66\": \"e\",\n  \"67\": \"f\",\n  \"68\": \"f\",\n  \"69\": \"f\",\n};\n","import {\n  DELIVERY_COST_SCHEDULES,\n  SCHEDULE_BY_POSTCODE_PREFIX,\n} from \"./constants\";\n\nexport interface DeliveryCost {\n  maxKg: number;\n  cost: number;\n}\n\nexport const getDeliveryCostScheduleForPostCode = (postCode: string) => {\n  const schedules = DELIVERY_COST_SCHEDULES;\n  const postCodeScheduleMap = SCHEDULE_BY_POSTCODE_PREFIX;\n\n  let prefixLength = postCode.length;\n  let relevantScheduleKey = postCodeScheduleMap[postCode];\n  while (prefixLength > 0 && !relevantScheduleKey) {\n    const prefix = postCode.substr(0, prefixLength);\n\n    relevantScheduleKey = postCodeScheduleMap[prefix];\n\n    // Try again with a wider prefix\n    prefixLength -= 1;\n  }\n\n  if (!relevantScheduleKey) return null;\n  const relevantSchedule = schedules[relevantScheduleKey];\n  return relevantSchedule.sort((a, b) => a.maxKg - b.maxKg);\n};\n\nexport const getDeliveryCostForWeightAndSchedule = (\n  weightKg: number,\n  schedule: DeliveryCost[]\n) => {\n  let i = 0;\n  while (i < schedule.length && schedule[i].maxKg < weightKg) {\n    i++;\n  }\n  if (i >= schedule.length) return null;\n  return schedule[i].cost;\n};\n\nexport const getDeliveryCost = (\n  totalWeightKg: number,\n  postCode: string,\n  shouldDeliver: boolean\n) => {\n  if (!shouldDeliver) return 0;\n  const schedule = getDeliveryCostScheduleForPostCode(postCode);\n  if (!schedule) return null;\n  return getDeliveryCostForWeightAndSchedule(totalWeightKg, schedule);\n};\n","import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport { Container, Row, Col, Form, Button, InputGroup } from \"react-bootstrap\";\n\nimport otrishLogo from \"./images/otrish-logo.png\";\nimport { getDeliveryCost } from \"./utils/deliveryCost\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst QUALITIES: Quality[] = [\n  { label: \"Bad\", priceCents: 100, unit: \"kg\" },\n  { label: \"Normal\", priceCents: 150, unit: \"kg\" },\n  { label: \"Nice\", priceCents: 180, unit: \"kg\" },\n  { label: \"Super\", priceCents: 210, unit: \"kg\" },\n  { label: \"Superduper\", priceCents: 300, unit: \"kg\" },\n];\n\ninterface Quality {\n  label: string;\n  priceCents: number;\n  unit: string;\n}\n\ninterface OrderItem {\n  quality: Quality;\n  diameterMm: number;\n  thicknessMm: number;\n  lengthMm: number;\n  units: number;\n}\n\ninterface FormState {\n  quality?: Quality;\n  diameterMm?: number;\n  thicknessMm?: number;\n  lengthMm?: number;\n  units?: number;\n}\n\nconst getWeight = (\n  diameterMm: number,\n  thicknessMm: number,\n  lengthMm: number\n): number => {\n  return (\n    (lengthMm / 1000) * (diameterMm - thicknessMm) * thicknessMm * 0.0246615\n  );\n};\n\nconst getOrderItemWeight = (orderItem: OrderItem): number => {\n  return (\n    getWeight(orderItem.diameterMm, orderItem.thicknessMm, orderItem.lengthMm) *\n    orderItem.units\n  );\n};\n\nconst getOrderItemCost = (orderItem: OrderItem): number => {\n  const itemWeight = getOrderItemWeight(orderItem);\n  console.log(\">>> orderItem\", orderItem);\n  return (itemWeight * orderItem.quality.priceCents) / 100;\n};\n\nconst isValidFormState = (formState: FormState): boolean => {\n  const { quality, diameterMm, thicknessMm, lengthMm, units } = formState;\n  return (\n    quality !== undefined &&\n    diameterMm !== undefined &&\n    thicknessMm !== undefined &&\n    lengthMm !== undefined &&\n    units !== undefined\n  );\n};\n\nconst FormItemSummary: React.FC<{ item: FormState }> = ({ item }) => {\n  if (\n    item.quality === undefined ||\n    item.diameterMm === undefined ||\n    item.thicknessMm === undefined ||\n    item.lengthMm === undefined ||\n    item.units === undefined\n  ) {\n    return null;\n  }\n\n  const totalLengthMeters = (item.lengthMm * item.units) / 1000;\n  const totalWeight =\n    getWeight(item.diameterMm, item.thicknessMm, item.lengthMm) * item.units;\n  const totalPrice = (totalWeight * item.quality.priceCents) / 100;\n\n  return (\n    <>\n      <hr />\n      <div className=\"OrderSummaryRow-container\">\n        <div>Total length:</div>\n        <div>{totalLengthMeters.toFixed(2)} m</div>\n      </div>\n      <div className=\"OrderSummaryRow-container\">\n        <div>Total weight:</div>\n        <div>\n          {totalWeight.toFixed(2)} {item.quality.unit}\n        </div>\n      </div>\n      <div className=\"OrderSummaryRow-container\">\n        <div>Price:</div>\n        <div>€ {totalPrice.toFixed(2)}</div>\n      </div>\n    </>\n  );\n};\n\nconst OrderItemDisplay: React.FC<{ item: OrderItem }> = ({ item }) => {\n  const totalWeight =\n    getWeight(item.diameterMm, item.thicknessMm, item.lengthMm) * item.units;\n  const totalPrice = (totalWeight * item.quality.priceCents) / 100;\n  return (\n    <div className=\"OrderSummaryRow-container\">\n      <div>\n        {item.units}x {item.quality.label} ({item.diameterMm}mm x{\" \"}\n        {item.thicknessMm} mm x {item.lengthMm}mm)\n      </div>\n      <div>€ {totalPrice.toFixed(2)}</div>\n    </div>\n  );\n};\n\nconst TotalPriceDisplay: React.FC<{\n  orderItems: OrderItem[];\n  shouldDeliver: boolean;\n  postCode: string;\n}> = ({ orderItems, shouldDeliver, postCode }) => {\n  if (orderItems.length === 0) return null;\n\n  const totalWeight = orderItems\n    .map(getOrderItemWeight)\n    .reduce((acc, weight) => acc + weight, 0);\n\n  const totalMaterialCost = orderItems\n    .map(getOrderItemCost)\n    .reduce((acc, cost) => acc + cost, 0);\n\n  const totalDeliveryCost = getDeliveryCost(\n    totalWeight,\n    postCode,\n    shouldDeliver\n  );\n\n  const totalCost = totalMaterialCost + (totalDeliveryCost ?? 0);\n\n  return (\n    <>\n      <hr />\n      <div className=\"OrderSummaryRow-container\">\n        <div>Material:</div>\n        <div>€ {totalMaterialCost.toFixed(2)}</div>\n      </div>\n      <div className=\"OrderSummaryRow-container\">\n        <div>Weight:</div>\n        <div>{totalWeight.toFixed(2)} Kg</div>\n      </div>\n      {shouldDeliver && totalDeliveryCost && (\n        <div className=\"OrderSummaryRow-container\">\n          <div>Delivery:</div>\n          <div>€ {totalDeliveryCost.toFixed(2)}</div>\n        </div>\n      )}\n      <div className=\"OrderSummaryRow-container\">\n        <div>Total:</div>\n        <div>€ {totalCost.toFixed(2)}</div>\n      </div>\n      <hr />\n    </>\n  );\n};\n\nconst App = () => {\n  const [formState, setFormState] = useState<FormState>({} as FormState);\n  const [shouldDeliver, setShouldDeliver] = useState<boolean>(false);\n  const [postCode, setPostCode] = useState<string>(\"\");\n  const [orderItems, setOrderItems] = useState<Array<OrderItem>>([]);\n\n  const qualityOptions = QUALITIES.map((quality) => {\n    const price = (quality.priceCents / 100).toFixed(2);\n    return {\n      label: `${quality.label} (€${price}/${quality.unit})`,\n      value: quality,\n    };\n  });\n\n  const handleQualityChange = (event: any) =>\n    setFormState({ ...formState, quality: event.value });\n\n  const handleDiameterChange = (event: any) =>\n    setFormState({ ...formState, diameterMm: Number(event.target.value) });\n\n  const handleThicknessChange = (event: any) =>\n    setFormState({ ...formState, thicknessMm: Number(event.target.value) });\n\n  const handleLengthChange = (event: any) =>\n    setFormState({ ...formState, lengthMm: Number(event.target.value) });\n\n  const handleUnitsChange = (event: any) =>\n    setFormState({ ...formState, units: Number(event.target.value) });\n\n  const handleShouldDeliverChange = (event: any) =>\n    setShouldDeliver(!shouldDeliver);\n\n  const handlePostCodeChange = (event: any) => setPostCode(event.target.value);\n\n  const handleAddItemClick = (event: any) => {\n    event.preventDefault();\n    if (!isValidFormState(formState)) return;\n    setOrderItems([...orderItems, formState as OrderItem]);\n  };\n\n  return (\n    <div className=\"AppContainer u-VerticalCenter\">\n      <Container fluid=\"md\">\n        <Row>\n          <Col className=\"layout\">\n            <img src={otrishLogo} alt=\"Otrish Logo\" height={200} />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"layout\">\n            <Form className=\"AddItemForm\">\n              <Form.Group as={Row} controlId=\"addItemFormQuality\">\n                <Form.Label column sm=\"4\">\n                  Quality\n                </Form.Label>\n                <Col sm=\"8\">\n                  <Select\n                    options={qualityOptions}\n                    onChange={handleQualityChange}\n                  />\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"addItemFormDiameter\">\n                <Form.Label column sm=\"4\">\n                  Diameter\n                </Form.Label>\n                <Col sm=\"8\">\n                  <InputGroup>\n                    <Form.Control\n                      type=\"number\"\n                      step=\"0.01\"\n                      onChange={handleDiameterChange}\n                    />\n                    <InputGroup.Append>\n                      <InputGroup.Text id=\"basic-addon2\">mm</InputGroup.Text>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"addItemFormThickness\">\n                <Form.Label column sm=\"4\">\n                  Thickness\n                </Form.Label>\n                <Col sm=\"8\">\n                  <InputGroup>\n                    <Form.Control\n                      type=\"number\"\n                      step=\"0.01\"\n                      onChange={handleThicknessChange}\n                    />\n                    <InputGroup.Append>\n                      <InputGroup.Text id=\"basic-addon2\">mm</InputGroup.Text>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"addItemFormLength\">\n                <Form.Label column sm=\"4\">\n                  Length\n                </Form.Label>\n                <Col sm=\"8\">\n                  <InputGroup>\n                    <Form.Control type=\"number\" onChange={handleLengthChange} />\n                    <InputGroup.Append>\n                      <InputGroup.Text id=\"basic-addon2\">mm</InputGroup.Text>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row} controlId=\"addItemFormUnits\">\n                <Form.Label column sm=\"4\">\n                  Units\n                </Form.Label>\n                <Col sm=\"8\">\n                  <InputGroup>\n                    <Form.Control type=\"number\" onChange={handleUnitsChange} />\n                    <InputGroup.Append>\n                      <InputGroup.Text id=\"basic-addon2\">units</InputGroup.Text>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Form.Group>\n\n              <FormItemSummary item={formState} />\n              <hr />\n\n              <Form.Group controlId=\"addItemFormShouldDeliver\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Should deliver?\"\n                  onChange={handleShouldDeliverChange}\n                  defaultChecked={false}\n                />\n              </Form.Group>\n\n              {shouldDeliver && (\n                <Form.Group as={Row} controlId=\"addItemFormPostCode\">\n                  <Form.Label column sm=\"4\">\n                    Post code\n                  </Form.Label>\n                  <Col sm=\"8\">\n                    <InputGroup>\n                      <Form.Control\n                        type=\"string\"\n                        onChange={handlePostCodeChange}\n                        maxLength={4}\n                      />\n                    </InputGroup>\n                  </Col>\n                </Form.Group>\n              )}\n\n              <Button\n                variant=\"primary\"\n                type=\"button\"\n                block\n                disabled={!isValidFormState(formState)}\n                onClick={handleAddItemClick}\n              >\n                Add item\n              </Button>\n            </Form>\n          </Col>\n          <Col className=\"layout u-flex u-flexBetween u-flexDirectionColumn\">\n            <div>\n              {orderItems.map((item) => (\n                <Row>\n                  <Col>\n                    <OrderItemDisplay item={item} />\n                  </Col>\n                </Row>\n              ))}\n            </div>\n            <div>\n              <Row>\n                <Col>\n                  <TotalPriceDisplay\n                    orderItems={orderItems}\n                    shouldDeliver={shouldDeliver}\n                    postCode={postCode}\n                  />\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}